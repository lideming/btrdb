name: CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Run test.ts
        run: |
          mkdir -p testdata
          deno test \
            --allow-read=testdata --allow-write=testdata \
            --coverage=testdata/coverage \
            --allow-env \
            test.ts

      - name: Analyze coverage
        run: |
          deno coverage testdata/coverage --lcov > testdata/coverage.lcov

      - name: Codecov
        uses: codecov/codecov-action@v1.5.2
        with:
          file: ./testdata/coverage.lcov
          fail_ci_if_error: true

  test-pagesize:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        page_size: [256, 512, 1024, 2048, 8192]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Run test.ts (page size ${{ matrix.page_size }})
        run: |
          BTRDB_PAGESIZE=${{ matrix.page_size }} \
            deno test \
            --allow-read=testdata --allow-write=testdata \
            --allow-env \
            test.ts

  fmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Check fmt
        run: deno fmt --check

  node:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 1.x

      - name: Build bundle for Node
        run: |
          mkdir -p dist
          deno bundle nodeCompat/mod.ts > dist/btrdb.mjs
          deno bundle nodeCompat/nodeTest.js > dist/test.mjs

      - name: Upload bundle to artifact
        uses: actions/upload-artifact@v2
        with:
          name: btrdb-node
          path: dist/btrdb.mjs

      - name: Run tests in Node
        run: |
          mkdir -p testdata
          node nodeCompat/example.mjs && \
            node dist/test.mjs
